services:
  redis:
    image: redis/redis-stack:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
      - kafka_secrets:/etc/kafka/secrets
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
      - zookeeper_secrets:/etc/zookeeper/secrets

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.8.0
    container_name: control-center
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      PORT: 9021
    depends_on:
      - kafka
      - zookeeper

  data-source-service:
    image: hungvo2003vn/data-source-service:latest
    pull_policy: if_not_present
    container_name: data-source-service-container
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      DATA_SOURCE_SERVICE_PORT: 3000
      DATA_SOURCE_SERVICE_DOMAIN: data-source-service
      DATA_SOURCE_SERVICE_URL: http://data-source-service:3000
      
      KAFKA_CLIENT_ID: data-source-district-9
      BOOTSTRAP_SERVER: kafka:29092
      KAFKA_API_KEY: admin
      KAFKA_API_SECRET: admin-secret
      REQUEST_TIMEOUT: 30000
      CONNECTION_TIMEOUT: 10000
      ALLOW_AUTO_TOPIC_CREATION: 1
      TRANSACTION_TIMEOUT: 60000
    depends_on:
      - kafka

  
  collection-tier-service:
    image: hungvo2003vn/collection-tier-service:latest
    pull_policy: if_not_present
    container_name: collection-tier-service-container
    ports:
      - "3001:3001"
    restart: unless-stopped
    environment:
      DATA_SOURCE_SERVICE_PORT: 3000
      DATA_SOURCE_SERVICE_DOMAIN: data-source-service
      DATA_SOURCE_SERVICE_URL: data-source-service:3000

      PRODUCER_SERVICE_PORT: 3001
      PRODUCER_SERVICE_DOMAIN: collection-tier-service
      PRODUCER_SERVICE_URL: http://collection-tier-service:3001

      CRON_TIME_CONSUMER_HOUSEHOLD: '*/2 * * * * *'
      CRON_CONSUMER_HOUSEHOLD_ENABLED: 0

      CRON_TIME_CONSUMER_AREA: '*/2 * * * * *'
      CRON_CONSUMER_AREA_ENABLED: 0

      CRON_TIME_CONSUMER_ANOMALY: '*/2 * * * * *'
      CRON_CONSUMER_ANOMALY_ENABLED: 0

      CONSUMER_HOUSEHOLD_ENABLED: 1
      CONSUMER_AREA_ENABLED: 1
      CONSUMER_ANOMALY_ENABLED: 1

      KAFKA_CLIENT_ID: collection-tier-district-9
      BOOTSTRAP_SERVER: kafka:29092
      KAFKA_API_KEY: admin
      KAFKA_API_SECRET: admin-secret
      REQUEST_TIMEOUT: 30000
      CONNECTION_TIMEOUT: 10000
      ALLOW_AUTO_TOPIC_CREATION: 1
      TRANSACTION_TIMEOUT: 60000

      REDIS_HOST: redis
      REDIS_PORT: 6379
      INACTIVE_TIME: 10000
    depends_on:
      - kafka
      - redis

  message-tier:
    image: tranminhhieu212/message-tier:latest
    container_name: message-tier
    ports:
      - "4000:4000"
    environment:
      BOOTSTRAP_SERVER: kafka:29092
    depends_on:
      - kafka

volumes:
  redis_data:
  kafka_data:
  kafka_secrets:
  zookeeper_data:
  zookeeper_log:
  zookeeper_secrets:

